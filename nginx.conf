worker_processes  1;

events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  server {
    listen 8080;
    listen [::]:8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    absolute_redirect off;
    port_in_redirect off;

    location = /health {
      default_type application/json;
      return 200 '{"status":"ok"}';
    }

    # Serve hashed assets with aggressive caching
    location ^~ /assets/ {
      try_files $uri =404;
      expires 1y;
      add_header Cache-Control "public, immutable, max-age=31536000";
      access_log off;
    }

    # Common static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|webp|woff|woff2|ttf|otf)$ {
      try_files $uri =404;
      expires 30d;
      add_header Cache-Control "public, max-age=2592000";
      access_log off;
    }

    # Prevent caching of HTML documents to avoid stale content
    location ~* \.html$ {
      try_files $uri =404;
      add_header Cache-Control "no-cache, no-store, must-revalidate" always;
      add_header Pragma "no-cache" always;
      expires -1;
    }

    # Fallback to index.html for client-side routing while serving folder indexes
    location / {
      try_files $uri $uri/index.html /index.html;
      add_header Cache-Control "no-cache, no-store, must-revalidate" always;
      add_header Pragma "no-cache" always;
      expires -1;
    }

    gzip on;
    gzip_types text/plain application/xml text/css text/javascript application/javascript application/json;
  }
}
